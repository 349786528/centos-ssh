# -----------------------------------------------------------------------------
# Naming convention:
#
#    centos-ssh@.service = {service-unit-install-template-name}
#        |
#        +------------- {image-name}
#
#    ssh.pool-1.register@.service = {service-unit-template-name}
#     |     |      |
#     |     |      +------------ {service-unit-companion-name}
#     |     +------------------- {service-unit-group-name}
#     +------------------------- {service-unit-name}
#
#    ssh.pool-1.register@1.1.service = {service-unit-instance-name}
#     |     |      |     | |
#     |     |      |     | +---- {service-unit-instance}
#     |     |      |     +------ {service-unit-local-id}
#     |     |      +------------ {service-unit-companion-name}
#     |     +------------------- {service-unit-group-name}
#     +------------------------- {service-unit-name}
#
#    ssh.pool-1.1.1.register = {service-unit-long-name}
#     |     |   | |    |
#     |     |   | |    +-------- {service-unit-companion-name}
#     |     |   | +------------- {service-unit-instance}
#     |     |   +--------------- {service-unit-local-id}
#     |     +------------------- {service-unit-group-name}
#     +------------------------- {service-unit-name}
#
# To install:
#     sudo sed -e "s~{{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}~{service-unit-name}.{service-unit-group-name}~g" \
#       {service-unit-install-template-name} > /etc/systemd/system/{service-unit-template-name}
#     sudo systemctl daemon-reload
#     sudo systemctl enable -f {service-unit-instance-name}
#
# Debugging:
#     sudo systemctl status {service-unit-instance-name}
#     journalctl -fn 50 -u {service-unit-instance-name}
#
# To uninstall:
#     sudo systemctl disable -f {service-unit-instance-name}
#     sudo rm /etc/systemd/system/{service-unit-template-name}
#     sudo systemctl daemon-reload
# -----------------------------------------------------------------------------

[Unit]
Description=centos-ssh etcd registration // %p@%i
After=etcd.service
After=etcd2.service
After={{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}@%i.service
BindsTo={{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}@%i.service
RefuseManualStart=true
RefuseManualStop=true

[Service]
Environment="REGISTER_ETCD_PARAMETERS="
Environment="REGISTER_KEY_ROOT=/services/{{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}.%i"
Environment="REGISTER_TTL=60"
Environment="REGISTER_UPDATE_INTERVAL=55"

# Unregister service
ExecStartPre=/bin/bash -c \
  "if /usr/bin/etcdctl ${REGISTER_ETCD_PARAMETERS} ls ${REGISTER_KEY_ROOT} &> /dev/null; then \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      rm \
      ${REGISTER_KEY_ROOT} \
      --recursive; \
  fi"

# Register service
ExecStart=/bin/bash -c \
  "while ! /usr/bin/etcdctl ${REGISTER_ETCD_PARAMETERS} get ${REGISTER_KEY_ROOT}/ports/tcp/22 &> /dev/null; do \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      mk \
      ${REGISTER_KEY_ROOT}/ports/tcp/22 \
      $(/usr/bin/sed 's/^[0-9.]*://' <<< $(if ! /usr/bin/docker port {{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}.%i 22 &> /dev/null; then echo ''; else /usr/bin/docker port {{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}.%i 22; fi)) \
      --ttl ${REGISTER_TTL} 2> /dev/null; \
    sleep 0.5; \
  done; \
  /usr/bin/etcdctl \
    ${REGISTER_ETCD_PARAMETERS} \
    mk \
    ${REGISTER_KEY_ROOT}/hostname \
    %H \
    --ttl ${REGISTER_TTL}; \
  while true; do \
    sleep ${REGISTER_UPDATE_INTERVAL}; \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      $(if ! /usr/bin/etcdctl ${REGISTER_ETCD_PARAMETERS} get ${REGISTER_KEY_ROOT}/ports/tcp/22 &> /dev/null; then echo set; else echo update; fi) \
      ${REGISTER_KEY_ROOT}/ports/tcp/22 \
      $(/usr/bin/sed 's/^[0-9.]*://' <<< $(if ! /usr/bin/docker port {{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}.%i 22 &> /dev/null; then echo ''; else /usr/bin/docker port {{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}.%i 22; fi)) \
      --ttl ${REGISTER_TTL}; \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      $(if ! /usr/bin/etcdctl ${REGISTER_ETCD_PARAMETERS} get ${REGISTER_KEY_ROOT}/hostname &> /dev/null; then echo set; else echo update; fi) \
      ${REGISTER_KEY_ROOT}/hostname \
      %H \
      --ttl ${REGISTER_TTL}; \
  done"

# Unregister service
ExecStop=/bin/bash -c \
  "if /usr/bin/etcdctl ${REGISTER_ETCD_PARAMETERS} ls ${REGISTER_KEY_ROOT} &> /dev/null; then \
    /usr/bin/etcdctl \
      ${REGISTER_ETCD_PARAMETERS} \
      rm \
      ${REGISTER_KEY_ROOT} \
      --recursive; \
  fi"

[Install]
DefaultInstance=1.1
RequiredBy={{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}@%i.service

[X-Fleet]
MachineOf={{SERVICE_UNIT_NAME}}.{{SERVICE_UNIT_GROUP}}@%i.service
